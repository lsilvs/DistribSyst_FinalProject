module AddressBook {

	struct AddressAccountDetails {
		long id;
		string name;
		string address;
		string phoneNumber;
		string email;
	};

	interface AddressBookOps {
		void callBackSetInviteList(in string availableList);
	};

	interface Address {
		void registerCB(in AddressBookOps c, in long userId);
		void insert(in any addressAccountDetailsIn, out any addressAccountDetailsOut);
		void remove(in any addressAccountDetailsIn, out any addressAccountDetailsOut);
		void get(in long addressId, out any addressAccountDetailsOut);
		void getList(out any addressBook);
		void displaysAvailableUsers();
	};

};


module Communication {

	interface CommunicationOps {
		void callBackCreateChat(in long chatId, in long senderId, in any message);
		void callBackShowdMessage(in long chatId, in long senderId, in any message);
	};

	interface HandlerMessage {
		void registerCB(in CommunicationOps c, in long userId);
		long createChat(in long user1, in long user2);
		void sendMessageToChat(in long chatId, in long senderId, in any message);
	};

};

module Jokenpo {

	interface JokenpoOps {
		void callBackCreateGame(in long gameId, in long senderId, in any message);
		void callBackShowdResult(in long playerId1, in long playerId2, in any message);
	};

	interface HandlerGame {
		void registerCB(in JokenpoOps c, in long userId);
		long createGame(in long user1, in long user2);
		void sendAction(in long gameId, in long playerId, in any option);
	};

};